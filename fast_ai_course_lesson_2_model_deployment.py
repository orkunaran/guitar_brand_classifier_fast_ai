# -*- coding: utf-8 -*-
"""fast-ai-course-lesson-2-model-deployment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/orkunaran/guitar_brand_classifier_fast_ai/blob/main/fast-ai-course-lesson-2-model-deployment.ipynb
"""

!pip -qq install fastbook





import os
from fastbook import *
from fastai.vision.widgets import *
#import fastbook
#fastbook.setup_book()
import warnings
warnings.filterwarnings("ignore")

fender = search_images_ddg("fender stratocaster")
gibson = search_images_ddg("gibson les paul")

fender_images = fender
len(fender_images), fender_images

gibson_images = gibson
len(gibson_images)

dest = "images/fender_images/fender.jpg"
download_url(fender_images[0], dest)

im = Image.open(dest)
im.to_thumb(128,128)

dest = "images/gibson_images/gibson.jpg"
download_url(gibson_images[0], dest)

im = Image.open(dest)
im.to_thumb(128,128)

"""import shutil
shutil.rmtree("/content/guitars")"""

# mkdir

guitar_types = ['fender stratocaster', 'gibson les paul', 'gibson flying v',
               'fender telecaster', "charvel guthrie govan signature",
                "ibanez joe satriani", "ibanez jem", "musicman majestic",
                ]
path = Path("guitars")
path.mkdir()

for o in guitar_types:
    dest = (path/o)
    dest.mkdir(exist_ok=False)
    results = search_images_ddg(f'{o}')
    download_images(dest, urls=results)

files = get_image_files(path)
files

failed = verify_images(files)
failed

failed.map(Path.unlink);

guitars = DataBlock(
    blocks=(ImageBlock, CategoryBlock),
    get_items=get_image_files,
    splitter=RandomSplitter(valid_pct=0.2, seed=42),
    get_y=parent_label,
    item_tfms=Resize(128))

dls = guitars.dataloaders(path)
dls.show_batch()

#resize
guitars = guitars.new(item_tfms = RandomResizedCrop(128,
                                                 min_scale = 0.2))
dls = guitars.dataloaders(path)
dls.train.show_batch(max_n=4, nrows=1, unique=True)

guitars = guitars.new(item_tfms=Resize(128),
                     batch_tfms = aug_transforms(mult=2))
dls = guitars.dataloaders(path)
dls.train.show_batch(max_n = 8,
                    unique = True)

guitars = guitars.new(item_tfms=RandomResizedCrop(224, min_scale = 0.3),
                     batch_tfms = aug_transforms())

dls = guitars.dataloaders(path)

#learner
learn = vision_learner(dls, resnet18,
                      metrics = error_rate)

learn.fine_tune(4)

interp = ClassificationInterpretation.from_learner(learn)
interp.plot_confusion_matrix()

cleaner = ImageClassifierCleaner(learn)
cleaner

learn.export()

path = Path()
path.ls(file_exts='.pkl')

"""# Deployment"""

# load learner
#learn_inf = load_learner(path/'export.pkl')
!pip -q install gradio
import gradio as gr
categories = learn.dls.vocab

learn.dls.vocab

def classify_guitars(image):
    pred, idx,probs = learn.predict(image)
    return dict(zip(categories, map(float,probs)))

dest = "/content/guitars/gibson flying v/00922780-a511-4a2a-92a1-0097447b96dd.jpg"

im = Image.open(dest)
im.thumbnail((196,196))
classify_guitars(im)

image = gr.inputs.Image(shape=(192,192))
label = gr.outputs.Label()
examples = ["/content/guitars/fender telecaster/04455623-7d2e-49cd-8859-a4946142cfbc.jpg",
            "/content/guitars/charvel guthrie govan signature/0d4f1313-d193-4b94-b43b-4a42ae1b28a1.jpg",
            ]


intf = gr.Interface(fn = classify_guitars,inputs = image, examples = examples, outputs = label)
intf.launch(inline=False, debug = True, share =True)

!gradio deploy

